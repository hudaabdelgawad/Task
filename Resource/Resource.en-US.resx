<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addProduct" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Arabic" xml:space="preserve">
    <value>Arabic</value>
  </data>
  <data name="BacktoList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="ClientAddressRequired" xml:space="preserve">
    <value>Client Address Required</value>
  </data>
  <data name="ClientCreated" xml:space="preserve">
    <value>Client Created Successfully</value>
  </data>
  <data name="ClientDeleted" xml:space="preserve">
    <value>Client Deleted Successfully</value>
  </data>
  <data name="ClientName" xml:space="preserve">
    <value>Client Name</value>
  </data>
  <data name="ClientNameRequired" xml:space="preserve">
    <value>Client FullName Required</value>
  </data>
  <data name="ClientPhoneRequired" xml:space="preserve">
    <value>Client Phone Required</value>
  </data>
  <data name="ClientUpdated" xml:space="preserve">
    <value>Client Updated Successfully</value>
  </data>
  <data name="confirm" xml:space="preserve">
    <value>Do you want to continue using the site?</value>
  </data>
  <data name="Createasalesinvoice" xml:space="preserve">
    <value>Create  Sales Invoice</value>
  </data>
  <data name="CreateProduct" xml:space="preserve">
    <value>Create Product</value>
  </data>
  <data name="CtaegoryName" xml:space="preserve">
    <value>Ctaegory Name</value>
  </data>
  <data name="dateinvoice" xml:space="preserve">
    <value>Invoice Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="dir" xml:space="preserve">
    <value>ltr</value>
  </data>
  <data name="Dscount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditProduct" xml:space="preserve">
    <value>Edit Product</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>FullName</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>Invalid username or password.</value>
  </data>
  <data name="InvoiceCreated" xml:space="preserve">
    <value>Invoice Created Successfully</value>
  </data>
  <data name="item" xml:space="preserve">
    <value>Ctegory</value>
  </data>
  <data name="ItemCreated" xml:space="preserve">
    <value>Category Created Successfully</value>
  </data>
  <data name="ItemDeleted" xml:space="preserve">
    <value>Category Deleted Successfully</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>Category Name Required</value>
  </data>
  <data name="ItemUpdated" xml:space="preserve">
    <value>Category Updated Successfully</value>
  </data>
  <data name="lbbtnDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="lbbtnEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="lbbtnEditCategory" xml:space="preserve">
    <value>Edit Category</value>
  </data>
  <data name="lbbtnEditClient" xml:space="preserve">
    <value>Edit Client</value>
  </data>
  <data name="lbbtnSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="lbbtnSaveNewCategory" xml:space="preserve">
    <value>Add New Category</value>
  </data>
  <data name="lbbtnSaveNewClient" xml:space="preserve">
    <value>Add New Client</value>
  </data>
  <data name="lbcancelButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="lbCategories" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="lbCategory" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="lbclient" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="lbconfirmButtonText" xml:space="preserve">
    <value>Ok,delete it</value>
  </data>
  <data name="lbcreateinvoice" xml:space="preserve">
    <value>Create Invoice</value>
  </data>
  <data name="lbDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="lbEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="lbEmailUser" xml:space="preserve">
    <value>البريد الالكترونى</value>
  </data>
  <data name="lbEvents" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="lbhome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="lbHomePage" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="lbinvoice" xml:space="preserve">
    <value>Invoices</value>
  </data>
  <data name="lbitem" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="lbOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="lbprice" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="lbproduct" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="lbproducts" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="lbquentity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="MaxLength" xml:space="preserve">
    <value>The number of letters must not exceed twenty letters</value>
  </data>
  <data name="mess" xml:space="preserve">
    <value>Nothing!!</value>
  </data>
  <data name="MinLength" xml:space="preserve">
    <value>The number of letters must not be less than three</value>
  </data>
  <data name="NetAmount" xml:space="preserve">
    <value>Net Total</value>
  </data>
  <data name="OrderDateRequired" xml:space="preserve">
    <value>enter the date the invoice was created</value>
  </data>
  <data name="pass" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password is Required</value>
  </data>
  <data name="Phonedigit" xml:space="preserve">
    <value>The phone number consists of 11 The phone number consists of 11 characters</value>
  </data>
  <data name="Phoneformat" xml:space="preserve">
    <value>The phone number must consist of 11 digits and begin with (010, 011, 012, or 015)</value>
  </data>
  <data name="PhonrNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PriceRange" xml:space="preserve">
    <value>enter a price greater than zero</value>
  </data>
  <data name="PriceRequired" xml:space="preserve">
    <value>Price Required</value>
  </data>
  <data name="ProductCreated" xml:space="preserve">
    <value>Product Created</value>
  </data>
  <data name="ProductDeleted" xml:space="preserve">
    <value>Product Deleted</value>
  </data>
  <data name="ProductNam" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Product Name Required</value>
  </data>
  <data name="ProductPrice" xml:space="preserve">
    <value>Product Price</value>
  </data>
  <data name="ProductUpdated" xml:space="preserve">
    <value>Product Updated</value>
  </data>
  <data name="QuantityRange" xml:space="preserve">
    <value>Quentity more than 0</value>
  </data>
  <data name="QuantityRequired" xml:space="preserve">
    <value>Quantity Required</value>
  </data>
  <data name="SaveInvoice" xml:space="preserve">
    <value>Save Invoice</value>
  </data>
  <data name="selectCategory" xml:space="preserve">
    <value>Selet Category</value>
  </data>
  <data name="selectclient" xml:space="preserve">
    <value>Select Client</value>
  </data>
  <data name="Selectlanguage" xml:space="preserve">
    <value>Select a language</value>
  </data>
  <data name="selectProduct" xml:space="preserve">
    <value>Select Product</value>
  </data>
  <data name="textMsg" xml:space="preserve">
    <value>Delete!</value>
  </data>
  <data name="titleMsg" xml:space="preserve">
    <value>Are you sure Delete Product??</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="user" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>UserName is Required</value>
  </data>
</root>